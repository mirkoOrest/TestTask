{"version":3,"file":"movie.controller.js","sourceRoot":"","sources":["../../../src/controllers/movie/movie.controller.ts"],"names":[],"mappings":";;;AAGA,gDAAkD;AAElD,MAAM,eAAe;IAEnB,KAAK,CAAC,WAAW,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QAC/D,IAAI;YAEF,MAAM,KAAK,GAAG,GAAG,CAAC,IAAc,CAAC;YACjC,MAAM,QAAQ,GAAG,MAAM,oBAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAEvD,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAEpB;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,CAAC,CAAC,CAAC;SACT;IACH,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QAC7D,IAAI;YAEF,MAAM,MAAM,GAAG,MAAM,oBAAY,CAAC,SAAS,EAAE,CAAC;YAE9C,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAElB;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,CAAC,CAAC,CAAC;SACT;IAEH,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QAC9D,IAAI;YACF,MAAM,MAAM,GAAG,MAAM,oBAAY,CAAC,UAAU,EAAE,CAAC;YAE/C,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAElB;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,CAAC,CAAC,CAAC;SACT;IACH,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QACpE,IAAI;YACF,MAAM,MAAM,GAAG,MAAM,oBAAY,CAAC,gBAAgB,EAAE,CAAC;YAErD,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAElB;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,CAAC,CAAC,CAAC;SACT;IACH,CAAC;IAED,KAAK,CAAC,iBAAiB,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QACrE,IAAI;YACF,MAAM,MAAM,GAAG,MAAM,oBAAY,CAAC,iBAAiB,EAAE,CAAC;YAEtD,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAElB;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,CAAC,CAAC,CAAC;SACT;IACH,CAAC;CAEF;AAEY,QAAA,eAAe,GAAG,IAAI,eAAe,EAAE,CAAC","sourcesContent":["import {NextFunction, Request, Response} from 'express';\r\n\r\nimport {IMovie} from '../../models';\r\nimport {movieService} from '../../services/movie';\r\n\r\nclass MovieController {\r\n\r\n  async createMovie(req: Request, res: Response, next: NextFunction) {\r\n    try {\r\n\r\n      const movie = req.body as IMovie;\r\n      const newMovie = await movieService.createMovie(movie);\r\n\r\n      res.json(newMovie);\r\n\r\n    } catch (e) {\r\n      next(e);\r\n    }\r\n  }\r\n\r\n  async getMovies(req: Request, res: Response, next: NextFunction) {\r\n    try {\r\n\r\n      const movies = await movieService.getMovies();\r\n\r\n      res.json(movies);\r\n\r\n    } catch (e) {\r\n      next(e);\r\n    }\r\n\r\n  }\r\n\r\n  async getByYears(req: Request, res: Response, next: NextFunction) {\r\n    try {\r\n      const movies = await movieService.getByYears();\r\n\r\n      res.json(movies);\r\n\r\n    } catch (e) {\r\n      next(e);\r\n    }\r\n  }\r\n\r\n  async getByGenresFirst(req: Request, res: Response, next: NextFunction) {\r\n    try {\r\n      const movies = await movieService.getByGenresFirst();\r\n\r\n      res.json(movies);\r\n\r\n    } catch (e) {\r\n      next(e);\r\n    }\r\n  }\r\n\r\n  async getByGenresSecond(req: Request, res: Response, next: NextFunction) {\r\n    try {\r\n      const movies = await movieService.getByGenresSecond();\r\n\r\n      res.json(movies);\r\n\r\n    } catch (e) {\r\n      next(e);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport const movieController = new MovieController();\r\n"]}